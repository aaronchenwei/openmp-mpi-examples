
HELLO
  C/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 1
  This is process 0 out of 1

  We request 2 threads.

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 2
  This is process 0 out of 2
  This is process 1 out of 2

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.000093

HELLO
  C/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  Calling OMP_GET_NUM_THREADS inside a
  This is process 1 out of 2
  parallel region, we get the number of
  threads is 2
  This is process 0 out of 2

  We request 4 threads.
  This is process 1 out of 4
  This is process 2 out of 4

  This is process 3 out of 4
  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 4
  This is process 0 out of 4

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.000218

HELLO
  C/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  Calling OMP_GET_NUM_THREADS inside a
  This is process 3 out of 4
  parallel region, we get the number of
  This is process 2 out of 4
  threads is 4
  This is process 0 out of 4
  This is process 1 out of 4

  We request 8 threads.
  This is process 1 out of 8
  This is process 7 out of 8
  This is process 5 out of 8
  This is process 2 out of 8
  This is process 6 out of 8
  This is process 3 out of 8

  This is process 4 out of 8
  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 8
  This is process 0 out of 8

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.000389

HELLO
  C/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  This is process 4 out of 8
  Calling OMP_GET_NUM_THREADS inside a
  This is process 2 out of 8
  parallel region, we get the number of
  threads is 8
  This is process 0 out of 8
  This is process 7 out of 8
  This is process 5 out of 8
  This is process 3 out of 8
  This is process 1 out of 8
  This is process 6 out of 8

  We request 16 threads.
  This is process 3 out of 16
  This is process 2 out of 16
  This is process 1 out of 16
  This is process 5 out of 16

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 16
  This is process 11 out of 16
  This is process 7 out of 16
  This is process 10 out of 16
  This is process 6 out of 16
  This is process 14 out of 16
  This is process 8 out of 16
  This is process 15 out of 16
  This is process 4 out of 16
  This is process 13 out of 16
  This is process 0 out of 16
  This is process 9 out of 16
  This is process 12 out of 16

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.000890
