
HELLO
  C++/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 1
  This is process 0 out of 1

  We request 2 threads.

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 2
  This is process 0 out of 2
  This is process 1 out of 2

HELLO
  Normal end of execution.

  Elapsed wall clock time = 8.89e-05

HELLO
  C++/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 2
  This is process 0 out of   This is process 21
 out of 2

  We request 4 threads.
  This is process 1 out of 4

  This is process   This is process   Calling OMP_GET_NUM_THREADS inside a
23 out of   parallel region, we get the number of
4 out of 4
  threads is 
4
  This is process 0 out of 4

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.000217

HELLO
  C++/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 4
  This is process 0 out of 4  This is process   This is process   This is process 2 out of 4
1 out of 4
3 out of 4


  We request 8 threads.
  This is process   This is process   This is process   This is process   This is process   This is process 1  This is process 7 out of 8
4 out of 6 out of 8
352 out of 8
 out of  out of  out of 8
888



  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 8
  This is process 0 out of 8

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.0004134

HELLO
  C++/OpenMP version

  The number of processors available:
  OMP_GET_NUM_PROCS () = 8

  This is process   This is process   Calling OMP_GET_NUM_THREADS inside a
4 out of 8
  This is process   This is process   This is process   This is process   parallel region, we get the number of
31  threads is 2 out of  out of 8
8
  This is process 08 out of 6 out of 8
8  This is process 

5 out of 8
 out of 78
 out of 8

  We request 16 threads.
  This is process   This is process   This is process 1  This is process  out of   This is process   This is process 372  This is process 6 out of 16 out of 
1645 out of 1616


 out of 16

  Calling OMP_GET_NUM_THREADS inside a
  parallel region, we get the number of
  threads is 16 out of 
16 out of   This is process 0 out of 16

16  This is process 8
 out of 16
  This is process 11 out of 16
  This is process 9 out of 16  This is process 
12 out of 16
  This is process 15 out of   This is process 1610
 out of 16
  This is process 14 out of 16  This is process 13 out of 
16

HELLO
  Normal end of execution.

  Elapsed wall clock time = 0.0006713
